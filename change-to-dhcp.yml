---
- name: Configurer interface réseau en DHCP sous Debian/Ubuntu
  hosts: all
  become: yes
  gather_facts: false  # facultatif, tu peux activer si besoin

  vars:
    # Optionnel, tu peux définir une interface fixe ici
    # dhcp_interface: ""

  tasks:
    - name: Detect main network interface (excluding lo)
      shell: |
        ip -o link show | awk -F': ' '$2 != "lo" {print $2}' | head -n 1
      register: detect_interface
      changed_when: false

    - name: Set dhcp_interface variable
      set_fact:
        dhcp_interface: "{{ detect_interface.stdout }}"
      when: dhcp_interface is not defined or dhcp_interface == ""

    - name: Vérifier que /etc/network/interfaces existe
      stat:
        path: /etc/network/interfaces
      register: interfaces_stat

    - name: Slurp /etc/network/interfaces only if it exists
      slurp:
        path: /etc/network/interfaces
      register: interfaces_file_slurped
      when: interfaces_stat.stat.exists

    - name: Debug contenu original /etc/network/interfaces décodé
      debug:
        msg: "{{ interfaces_file_slurped.content | b64decode }}"
      when: interfaces_stat.stat.exists

    - name: Remplacer static par dhcp dans /etc/network/interfaces
      copy:
        dest: /etc/network/interfaces
        content: |
          {{ (interfaces_file_slurped.content | b64decode
              | regex_replace('(?ms)^iface {{ dhcp_interface }} inet static\n(?:[ \t]+.+\n?)*', '') 
              | regex_replace('(?m)^auto {{ dhcp_interface }}\n?', '')
          ) }}
          auto {{ dhcp_interface }}
          iface {{ dhcp_interface }} inet dhcp
        backup: yes
      notify: restart networking
      when: interfaces_stat.stat.exists

  handlers:
    - name: restart networking
      service:
        name: networking
        state: restarted
