---
- name: Passer l’IP de statique à DHCP (Debian/Ubuntu)
  hosts: server
  become: true
  vars:
    interface_cible: ens33  # Modifie selon ton interface réseau (ex : eth0, enp0s3, etc.)
    netplan_file: /etc/netplan/00-installer-config.yaml  # À adapter si différent
    nm_conn: Wired\ connection\ 1  # À adapter si différent (voir `nmcli c`)
  gather_facts: no  # Optionnel : pour éviter la collecte réseau avant la conversion

  tasks:

    # Sauvegarde de la configuration avant toute modification
    - name: Sauvegarder la configuration réseau actuelle (netplan)
      ansible.builtin.copy:
        src: "{{ netplan_file }}"
        dest: "{{ netplan_file }}.bak"
        remote_src: true
      when:
        - ansible_local.network_type is undefined
        - ansible.builtin.stat(path=netplan_file, get_attributes=false).stat.exists

    - name: Sauvegarder la configuration réseau actuelle (interfaces)
      ansible.builtin.copy:
        src: /etc/network/interfaces
        dest: /etc/network/interfaces.bak
        remote_src: true
      when:
        - ansible_local.network_type is undefined
        - ansible.builtin.stat(path="/etc/network/interfaces", get_attributes=false).stat.exists

    - name: Sauvegarder la configuration réseau actuelle (NetworkManager)
      ansible.builtin.copy:
        src: /etc/NetworkManager/system-connections/{{ nm_conn }}
        dest: /etc/NetworkManager/system-connections/{{ nm_conn }}.bak
        remote_src: true
      when:
        - ansible_local.network_type is undefined
        - ansible.builtin.stat(path="/etc/NetworkManager/system-connections/" + nm_conn, get_attributes=false).stat.exists

    # Détection du mode de gestion réseau
    - name: Détecter le mode de gestion réseau
      block:
        - name: Vérifier si netplan est utilisé
          ansible.builtin.stat:
            path: "{{ netplan_file }}"
            get_attributes: false
          register: netplan_stat

        - name: Vérifier si interfaces est utilisé
          ansible.builtin.stat:
            path: /etc/network/interfaces
            get_attributes: false
          register: interfaces_stat

        - name: Vérifier si NetworkManager est utilisé (fichier de connection)
          ansible.builtin.stat:
            path: "/etc/NetworkManager/system-connections/{{ nm_conn }}"
            get_attributes: false
          register: nm_conn_stat

        - name: Déterminer le mode de gestion réseau
          ansible.builtin.set_fact:
            network_type: >-
              {% if netplan_stat.stat.exists %}
                netplan
              {% elif interfaces_stat.stat.exists %}
                interfaces
              {% elif nm_conn_stat.stat.exists %}
                networkmanager
              {% else %}
                unknown
              {% endif %}

        - name: Enregistrer le mode de gestion réseau dans ansible_local (pour la session)
          ansible.builtin.set_fact:
            ansible_local:
              network_type: "{{ network_type }}"

        - name: Afficher le mode détecté
          ansible.builtin.debug:
            msg: "Mode de gestion réseau détecté : {{ network_type }}"
      run_once: true

    # Conversion vers DHCP selon le mode détecté
    - name: Passer en DHCP avec netplan
      ansible.builtin.blockinfile:
        path: "{{ netplan_file }}"
        backup: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK: Set interface DHCP"
        block: |
          network:
            version: 2
            renderer: networkd
            ethernets:
              {{ interface_cible }}:
                dhcp4: true
                dhcp6: true
        insertafter: EOF
      when: network_type == "netplan"

    - name: Passer en DHCP avec interfaces
      ansible.builtin.blockinfile:
        path: /etc/network/interfaces
        backup: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK: Set interface DHCP"
        block: |
          auto {{ interface_cible }}
          iface {{ interface_cible }} inet dhcp
        insertafter: EOF
      when: network_type == "interfaces"

    - name: Passer en DHCP avec NetworkManager
      ansible.builtin.shell: |
        nmcli connection modify "{{ nm_conn }}" ipv4.method auto
        nmcli connection up "{{ nm_conn }}"
      when: network_type == "networkmanager"

    - name: Échec si aucun mode de gestion réseau connu n’est trouvé
      ansible.builtin.fail:
        msg: "Aucun mode de gestion réseau standard (netplan, interfaces, NetworkManager) n’a été détecté."
      when: network_type == "unknown"

    # Nettoyage et activation des modifications
    - name: Appliquer la configuration netplan (si modifié)
      ansible.builtin.command: netplan apply
      when: network_type == "netplan" and ansible_local.netplan_modified is defined

    - name: Redémarrer le service Networking (interfaces)
      ansible.builtin.service:
        name: networking
        state: restarted
      when: network_type == "interfaces"

    # (Optionnel) Affichage du récapitulatif
    - name: Afficher un message de confirmation
      ansible.builtin.debug:
        msg: "La configuration réseau a été modifiée pour utiliser DHCP ({{ interface_cible }}) avec le mode {{ network_type }}."
