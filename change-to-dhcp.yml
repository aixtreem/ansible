---
# **********************************************************
# Passer l‚ÄôIP de statique √† DHCP (Debian/Ubuntu, adapt√© pour esphome)
#
# √Ä adapter‚ÄØ:
# - interface_cible (ex‚ÄØ: eth0, ens33, enp0s3¬†: v√©rifie avec `ip a`)
# - netplan_file (le fichier principal netplan, souvent /etc/netplan/00-installer-config.yaml)
# - nm_conn (nom de la connexion NetworkManager, v√©rifie avec `nmcli c`)
#
# Usage‚ÄØ:
# ansible-playbook -i inventory.yml change-to-dhcp.yml
# **********************************************************

- name: Passer l‚ÄôIP de statique √† DHCP (Debian/Ubuntu)
  hosts: esphome  # üëà Cible l‚Äôh√¥te d√©fini dans ton inventory
  become: true    # Ex√©cute en root
  vars:
    # √Ä ADAPTER SELON TON ENVIRONNEMENT
    interface_cible: eth0                     # üîß Nom de l‚Äôinterface √† configurer (ATTENTION‚ÄØ: V√©rifie avec `ip a`)
    netplan_file: /etc/netplan/00-installer-config.yaml    # üîß Chemin du fichier netplan principal
    nm_conn: "Wired connection 1"             # üîß Nom de la connexion NetworkManager (voir `nmcli c`)

  # On d√©sactive la collecte des facts pour aller plus vite (optionnel)
  gather_facts: false


  tasks:
    # -----------------------------------------------------------------------------
    # D√©tection de la m√©thode de gestion r√©seau
    # -----------------------------------------------------------------------------
    # On v√©rifie quelle m√©thode est utilis√©e‚ÄØ: netplan, interfaces, NetworkManager

    - name: V√©rifier si netplan est utilis√©
      ansible.builtin.stat:
        path: "{{ netplan_file }}"
      register: netplan_stat       # R√©sultat dans netplan_stat

    - name: V√©rifier si interfaces est utilis√©
      ansible.builtin.stat:
        path: /etc/network/interfaces
      register: interfaces_stat    # R√©sultat dans interfaces_stat

    - name: V√©rifier si NetworkManager est utilis√©
      ansible.builtin.stat:
        path: "/etc/NetworkManager/system-connections/{{ nm_conn }}"
      register: networkmanager_stat # R√©sultat dans networkmanager_stat

    - name: D√©terminer la m√©thode de gestion r√©seau
      ansible.builtin.set_fact:
        network_type: >-
          {% if netplan_stat.stat.exists %}
            netplan
          {% elif interfaces_stat.stat.exists %}
            interfaces
          {% elif networkmanager_stat.stat.exists %}
            networkmanager
          {% else %}
            unknown
          {% endif %}

    - name: Afficher la m√©thode d√©tect√©e
      ansible.builtin.debug:
        msg: "M√©thode de gestion r√©seau d√©tect√©e‚ÄØ: {{ network_type }}"


    # -----------------------------------------------------------------------------
    # Sauvegarde de la configuration actuelle
    # -----------------------------------------------------------------------------

    - name: Sauvegarder la configuration netplan
      ansible.builtin.copy:
        src: "{{ netplan_file }}"
        dest: "{{ netplan_file }}.bak"
        remote_src: true
      when: netplan_stat.stat.exists

    - name: Sauvegarder la configuration interfaces
      ansible.builtin.copy:
        src: /etc/network/interfaces
        dest: /etc/network/interfaces.bak
        remote_src: true
      when: interfaces_stat.stat.exists

    - name: Sauvegarder la configuration NetworkManager
      ansible.builtin.copy:
        src: "/etc/NetworkManager/system-connections/{{ nm_conn }}"
        dest: "/etc/NetworkManager/system-connections/{{ nm_conn }}.bak"
        remote_src: true
      when: networkmanager_stat.stat.exists


    # -----------------------------------------------------------------------------
    # Conversion vers DHCP selon la m√©thode d√©tect√©e
    # -----------------------------------------------------------------------------

    - name: Passer en DHCP avec netplan
      ansible.builtin.blockinfile:
        path: "{{ netplan_file }}"
        backup: yes                  # Sauvegarde avant modification
        marker: "# {mark} ANSIBLE MANAGED BLOCK: Set interface DHCP"
        block: |
          network:
            version: 2
            renderer: networkd
            ethernets:
              {{ interface_cible }}:
                dhcp4: true
                dhcp6: true
        insertafter: EOF             # Ajoute le bloc √† la fin du fichier
      when: network_type == "netplan"

    - name: Passer en DHCP avec interfaces
      ansible.builtin.blockinfile:
        path: /etc/network/interfaces
        backup: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK: Set interface DHCP"
        block: |
          auto {{ interface_cible }}
          iface {{ interface_cible }} inet dhcp
        insertafter: EOF             # Ajoute la ligne √† la fin du fichier
      when: network_type == "interfaces"

    - name: Passer en DHCP avec NetworkManager
      ansible.builtin.shell: |
        nmcli connection modify "{{ nm_conn }}" ipv4.method auto
        nmcli connection up "{{ nm_conn }}"
      when: network_type == "networkmanager"

    - name: √âchec si aucune m√©thode connue n‚Äôest d√©tect√©e
      ansible.builtin.fail:
        msg: "Aucune m√©thode de gestion r√©seau connue (netplan, interfaces, NetworkManager) n‚Äôa √©t√© d√©tect√©e."
      when: network_type == "unknown"


    # -----------------------------------------------------------------------------
    # Appliquer la nouvelle configuration r√©seau
    # -----------------------------------------------------------------------------

    - name: Appliquer la configuration netplan (netplan apply)
      ansible.builtin.command: netplan apply
      when: network_type == "netplan"

    - name: Red√©marrer le service networking (interfaces)
      ansible.builtin.service:
        name: networking
        state: restarted
      when: network_type == "interfaces"


    # -----------------------------------------------------------------------------
    # R√©capitulatif final
    # -----------------------------------------------------------------------------

    - name: Message de confirmation
      ansible.builtin.debug:
        msg: "La configuration r√©seau a √©t√© modifi√©e pour passer de statique √† DHCP sur {{ interface_cible }} (m√©thode‚ÄØ: {{ network_type }})."

    # ‚ö†Ô∏è √Ä la fin‚ÄØ: v√©rifie que la connexion fonctionne toujours avant de te d√©connecter‚ÄØ!
    # Si tu utilises SSH pour administrer, pr√©vois un acc√®s de secours (console, KVM, etc.).
