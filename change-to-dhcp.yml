---
- name: Detect and configure main network interface in DHCP
  hosts: all
  become: true
  vars:
    dhcp_interface: ""

  tasks:

    - name: Detect main network interface (excluding lo)
      shell: |
        ip -o link show | awk -F': ' '$2 != "lo" {print $2}' | head -n 1
      register: interface_detect
      changed_when: false

    - name: Set detected interface as variable
      set_fact:
        dhcp_interface: "{{ interface_detect.stdout }}"

    - name: Check if Netplan is used
      stat:
        path: /etc/netplan/
      register: netplan_dir

    - name: Check if /etc/network/interfaces exists
      stat:
        path: /etc/network/interfaces
      register: interfaces_file

    - name: Check if systemd-networkd is used
      stat:
        path: /etc/systemd/network
      register: systemd_networkd_dir

    - name: Debug detected interface and method
      debug:
        msg: |
          Interface détectée : {{ dhcp_interface }}
          Méthode : {{
            'Netplan' if netplan_dir.stat.exists else
            '/etc/network/interfaces' if interfaces_file.stat.exists else
            'systemd-networkd' if systemd_networkd_dir.stat.exists else
            'Inconnue'
          }}

    # --- Netplan Method ---
    - name: Configure interface with DHCP via Netplan
      when: netplan_dir.stat.exists
      copy:
        dest: "/etc/netplan/01-{{ dhcp_interface }}-dhcp.yaml"
        content: |
          network:
            version: 2
            ethernets:
              {{ dhcp_interface }}:
                dhcp4: true

    - name: Apply Netplan config
      when: netplan_dir.stat.exists
      command: netplan apply

    # --- /etc/network/interfaces Method ---
    - name: Remove static config block and set DHCP in /etc/network/interfaces
      when: interfaces_file.stat.exists and not netplan_dir.stat.exists
      block:
        - name: Read /etc/network/interfaces
          slurp:
            path: /etc/network/interfaces
          register: interfaces_file

        - name: Replace static config with DHCP for detected interface
          copy:
            dest: /etc/network/interfaces
            content: |
              {{
                (
                  interfaces_file['content'] | b64decode |
                  regex_replace("(?ms)^iface {{ dhcp_interface }} inet static\n(\\s+.+\n)*", "") ~
                  "\niface {{ dhcp_interface }} inet dhcp\n"
                ) | trim
              }}
            backup: yes
          notify: restart networking

    # --- systemd-networkd Method ---
    - name: Configure interface via systemd-networkd
      when: systemd_networkd_dir.stat.exists and not netplan_dir.stat.exists and not interfaces_file.stat.exists
      copy:
        dest: "/etc/systemd/network/10-{{ dhcp_interface }}.network"
        content: |
          [Match]
          Name={{ dhcp_interface }}

          [Network]
          DHCP=ipv4
      notify: restart systemd-networkd

  handlers:
    - name: restart networking
      service:
        name: networking
        state: restarted

    - name: restart systemd-networkd
      service:
        name: systemd-networkd
        state: restarted
