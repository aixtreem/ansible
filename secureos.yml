---
- name: Sécuriser l’accès SSH par clé et droits sudo
  hosts: esphome
  become: true

  vars:
    ssh_user: ede
    ssh_pub_keys:
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDFxTwgphUUj705yoC5JZn/kv4y4gGu2vJVygV3m8+pU ede@UM870"
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEqjsbWlxnhsidchP3DcNWKijHzaQnE06QRsoAEpU+WR ede@semaphore"

  handlers:
    - name: Créer .ssh après création utilisateur
      ansible.builtin.file:
        path: "/home/{{ ssh_user }}/.ssh"
        state: directory
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: '0700'
      listen: L’utilisateur a été créé

  tasks:
    # Vérifier si l’utilisateur existe déjà
    - name: Vérifier si {{ ssh_user }} existe déjà
      ansible.builtin.stat:
        path: "/home/{{ ssh_user }}"
      register: user_info
      changed_when: false

    # Créer l’utilisateur si besoin
    - name: Créer l’utilisateur {{ ssh_user }} (si besoin)
      ansible.builtin.user:
        name: "{{ ssh_user }}"
        state: present
        shell: /bin/bash
        create_home: yes
      when: not user_info.stat.exists
      notify: Créer .ssh après création utilisateur

    # Installer les clés publiques (une par ligne)
    - name: Ajouter les clés SSH publiques dans authorized_keys
      ansible.builtin.copy:
        content: "{{ ssh_pub_keys | join('\n') }}"
        dest: "/home/{{ ssh_user }}/.ssh/authorized_keys"
        owner: "{{ ssh_user }}"
        group: "{{ ssh_user }}"
        mode: '0600'

    # Ajout à sudoers.d pour sudo sans mot de passe
    - name: Donner à {{ ssh_user }} un accès sudo sans mot de passe
      ansible.builtin.copy:
        content: "{{ ssh_user }} ALL=(ALL:ALL) NOPASSWD:ALL"
        dest: "/etc/sudoers.d/{{ ssh_user }}"
        mode: '0440'

    # Désactiver l’authentification par mot de passe SSH
    - name: Désactiver le mot de passe SSH
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present
        backup: yes
      register: modified_sshd_config

    # Interdire l’accès SSH à root
    - name: Interdire l’accès SSH à root
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present
        backup: yes
      register: modified_sshd_root

    # Redémarrer SSHD si une modification a eu lieu
    - name: Redémarrer le service SSHD si besoin
      ansible.builtin.service:
        name: sshd
        state: restarted
      when: modified_sshd_config.changed or modified_sshd_root.changed
